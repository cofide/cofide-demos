apiVersion: v1
kind: Namespace
metadata:
  name: production
  labels:
    name: production

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer
  namespace: production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consumer
  template:
    metadata:
      labels:
        app: consumer
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
      serviceAccountName: default
      containers:
        - name: consumer-container
          image: ghcr.io/cofide/cofide-demos/aws-oidc-consumer:${IMAGE_TAG}
          imagePullPolicy: Always
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: spiffe-workload-api
              mountPath: /spiffe-workload-api
              readOnly: true
          env:
          - name: SPIFFE_ENDPOINT_SOCKET
            value: unix:///spiffe-workload-api/spire-agent.sock
          - name: ANALYSIS_TRUST_DOMAIN
            value: ${ANALYSIS_TRUST_DOMAIN}
          - name: AWS_ROLE_ARN
            value: ${AWS_ROLE_ARN}
          - name: ANALYSIS_SPIFFE_ID
            value: ${ANALYSIS_SPIFFE_ID}
          - name: ENABLE_TLS
            value: "true"
      volumes:
        - name: spiffe-workload-api
          csi:
            driver: "csi.spiffe.io"
            readOnly: true

---
apiVersion: v1
kind: Service
metadata:
  name: consumer
  namespace: production
  labels:
    app: consumer
spec:
  type: ${CONSUMER_SERVICE_TYPE}
  ports:
    - port: 9090
      targetPort: 9090
      protocol: TCP
      name: http
  selector:
    app: consumer
